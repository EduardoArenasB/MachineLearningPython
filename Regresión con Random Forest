# Random Forest Regression

#Importar librerias
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

#Importar el dataset
dataset = pd.read_csv('Position_Salaries.csv')
X = dataset.iloc[:, 1:2].values
y = dataset.iloc[:, 2].values

#dividir el dataset en conjunto de entrenamiento y conjunto de testing
'''from sklearn.model_selection import train_test_split
X_train, X_test, y_train , y_test = train_test_split(X, y, test_size= 0.2, random_state= 0)'''

#Escalado de variables
'''from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
X_train = sc_X.fit_transform(X_train)
X_test = sc_X.transform(X_test)'''

#Ajustar el random forest con el dataset
from sklearn.ensemble import RandomForestRegressor
regression = RandomForestRegressor(n_estimators= 300 , random_state = 0)
regression.fit(X , y)

#Prediccion de nuestros modelos
y_pred = regression.predict(([[6.5]]))



#Visualizacion de los resultados del random forest
X_grid = np.arange(min(X), max(X), 0.0001)
X_grid = X_grid.reshape(len(X_grid), 1)
plt.scatter(X, y, color = 'red')
plt.plot(X_grid, regression.predict((X_grid)), color = 'blue')
plt.title('Modelo de regresion con Random Forest')
plt.xlabel('posicion del empleado')
plt.ylabel('sueldo en $')
plt.show()
